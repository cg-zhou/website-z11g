@using System.Web.Optimization;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- 引入样式 -->
<link rel="stylesheet" href="../../Content/3rdPartyLibs/element-ui/index.css">
@Scripts.Render("~/bundles/script");
<style>
    .red {
        color: red;
    }

    .tax-row {
        margin-top: 10px;
        text-align: center;
    }

    .tax-input {
        width: 300px;
    }

    .tax-result {
        font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,SimSun,sans-serif;
        -webkit-font-smoothing: antialiased;
    }

        .tax-result div {
            height: 40px;
        }

            .tax-result div span:nth-child(2n) {
                font-size: 20px;
                font-weight: bold;
                float: right;
            }
</style>

@*<script src="http://res.wx.qq.com/open/js/jweixin-1.4.0.js"></script>
    <script src="../../Content/js/wechat.js"></script>
*@

<div id="app" v-cloak class="banner">
    <div style="width: 300px;margin-left:auto;margin-right:auto;">

        <el-form :model="form" ref="form">
            <el-form-item prop="income"
                          :rules="[{ required: true, message: '请填写税前收入'},
                          { type: 'number', message: '请填入数值'}]">
                <el-input v-model.number="form.income"
                          placeholder="税前收入（月）"
                          class="tax-input"></el-input>
            </el-form-item>
            <el-form-item prop="incomeWithoutTax"
                          :rules="[{ required: true, message: '请填写不计个税收入'},
                          { type: 'number', message: '请填入数值'}]">
                <el-input v-model.number="form.incomeWithoutTax"
                          placeholder="不计个税部分（如社保、公积金等）"
                          class="tax-input"></el-input>
            </el-form-item>
            <el-form-item class="tax-row">
                <el-button type="primary" @@click="calc">提交</el-button>
                <el-button @@click="clear">重置</el-button>
            </el-form-item>
        </el-form>

        <el-card style="margin-top: 30px;">
            <div slot="header">
                <span class="tax-result" style="font-size:24px;">
                    计算结果
                </span>
            </div>

            <div class="tax-result">
                <div>
                    <span>以前每月缴税：</span>
                    <span>{{taxBefore2018}}</span>
                </div>
                <div>
                    <span>现在每月缴税：</span>
                    <span>{{taxAfter2018}}</span>
                </div>
                <div>
                    <span>以前每月税后：</span>
                    <span>{{netIncomePerMonthBefore2018}}</span>
                </div>
                <div>
                    <span>现在每月税后：</span>
                    <span>{{netIncomePerMonthAfter2018}}</span>
                </div>
                <div>
                    <span>每月减少缴税：</span>
                    <span style="color:orangered;">{{differencePerMonth}}</span>
                </div>
                <div>
                    <span>每年减少缴税：</span>
                    <span style="color:orangered;">{{differencePerYear}}</span>
                </div>
            </div>
        </el-card>
    </div>
</div>

<script>
    var app = new Vue({
        el: '#app',
        data: {
            form: {
                income: '',
                incomeWithoutTax: ''
            },

            taxBefore2018: 0,
            taxAfter2018: 0,
            differencePerMonth: 0,
            differencePerYear: 0,
            netIncomePerMonthBefore2018: 0,
            netIncomePerMonthAfter2018: 0
        },
        methods: {
            calc: function () {
                var self = this;
                self.$refs['form'].validate(function (valid) {
                    if (valid) {
                        axios.post('/CalcTax/Run', self.form).then(function (response) {
                            console.log(response);
                            self.taxBefore2018 = response.data.taxBefore2018;
                            self.taxAfter2018 = response.data.taxAfter2018;
                            self.differencePerMonth = response.data.differencePerMonth;
                            self.differencePerYear = response.data.differencePerYear;
                            self.netIncomePerMonthBefore2018 = response.data.netIncomePerMonthBefore2018;
                            self.netIncomePerMonthAfter2018 = response.data.netIncomePerMonthAfter2018;
                        }).catch(function (error) {
                            console.log(error);
                        });
                    } else {
                        console.log('error submit!!');
                        return false;
                    }
                });
            },
            clear: function () {
                this.form.income = '';
                this.form.incomeWithoutTax = '';
                this.taxBefore2018 = 0;
                this.taxAfter2018 = 0;
                this.differencePerMonth = 0;
                this.differencePerYear = 0;
                this.netIncomePerMonthBefore2018 = 0;
                this.netIncomePerMonthAfter2018 = 0;
            }
        }
    });

</script>
